From ee2b62864c9bd8a3f612f9e4696fcb6c7c468564 Mon Sep 17 00:00:00 2001
From: "Zhao, Xinda" <xinda.zhao@intel.com>
Date: Wed, 10 May 2017 10:16:31 +0800
Subject: [PATCH 1/3] POC: Add GPU cgroup support

GPU memory and priority support in cgroup is added.

Signed-off-by: Zhao, Xinda <xinda.zhao@intel.com>
---
 api/types/container/host_config.go                       |  2 ++
 daemon/daemon_unix.go                                    | 16 ++++++++++++++++
 daemon/oci_linux.go                                      |  2 ++
 .../opencontainers/runtime-spec/specs-go/config.go       | 10 ++++++++++
 4 files changed, 30 insertions(+)

diff --git a/api/types/container/host_config.go b/api/types/container/host_config.go
index 9fea9eb..384dae2 100644
--- a/api/types/container/host_config.go
+++ b/api/types/container/host_config.go
@@ -309,6 +309,8 @@ type Resources struct {
 	OomKillDisable       *bool           // Whether to disable OOM Killer or not
 	PidsLimit            int64           // Setting pids limit for a container
 	Ulimits              []*units.Ulimit // List of ulimits to be set in the container
+	GPUMemory	     uint64          // Maximum GPU memory used by the container
+	GPUPriority          int64           // Priority set for GPU in container
 
 	// Applicable to Windows
 	CPUCount           int64  `json:"CpuCount"`   // CPU count
diff --git a/daemon/daemon_unix.go b/daemon/daemon_unix.go
index 7d484cd..ed357a0 100644
--- a/daemon/daemon_unix.go
+++ b/daemon/daemon_unix.go
@@ -144,6 +144,22 @@ func getCPUResources(config containertypes.Resources) *specs.CPU {
 	return &cpu
 }
 
+func getGPUResources(config containertypes.Resources) *specs.GPU {
+	gpu := specs.GPU{}
+
+	if config.GPUMemory != 0 {
+		period := uint64(config.GPUMemory)
+		gpu.Memory = &period
+	}
+
+	if config.GPUPriority != 0 {
+		runtime := int64(config.GPUPriority)
+		gpu.Priority = &runtime
+	}
+
+	return &gpu
+}
+
 func getBlkioWeightDevices(config containertypes.Resources) ([]specs.WeightDevice, error) {
 	var stat syscall.Stat_t
 	var blkioWeightDevices []specs.WeightDevice
diff --git a/daemon/oci_linux.go b/daemon/oci_linux.go
index 73a9590..538640a 100644
--- a/daemon/oci_linux.go
+++ b/daemon/oci_linux.go
@@ -57,6 +57,7 @@ func setResources(s *specs.Spec, r containertypes.Resources) error {
 
 	memoryRes := getMemoryResources(r)
 	cpuRes := getCPUResources(r)
+	gpuRes := getGPUResources(r)
 	blkioWeight := r.BlkioWeight
 
 	specResources := &specs.Resources{
@@ -74,6 +75,7 @@ func setResources(s *specs.Spec, r containertypes.Resources) error {
 		Pids: &specs.Pids{
 			Limit: &r.PidsLimit,
 		},
+		GPU:    gpuRes,
 	}
 
 	if s.Linux.Resources != nil && len(s.Linux.Resources.Devices) > 0 {
diff --git a/vendor/github.com/opencontainers/runtime-spec/specs-go/config.go b/vendor/github.com/opencontainers/runtime-spec/specs-go/config.go
index 491b734..c9e025a 100644
--- a/vendor/github.com/opencontainers/runtime-spec/specs-go/config.go
+++ b/vendor/github.com/opencontainers/runtime-spec/specs-go/config.go
@@ -311,6 +311,14 @@ type Network struct {
 	Priorities []InterfacePriority `json:"priorities,omitempty"`
 }
 
+// GPU for Linux cgroup 'gpu' resource management
+type GPU struct {
+        // GPU Mem Limit
+        Memory *uint64 `json:"memory,omitempty"`
+        // GPU Priority
+        Priority *int64 `json:"prio,omitempty"`
+}
+
 // Resources has container runtime resource constraints
 type Resources struct {
 	// Devices configures the device whitelist.
@@ -331,6 +339,8 @@ type Resources struct {
 	HugepageLimits []HugepageLimit `json:"hugepageLimits,omitempty"`
 	// Network restriction configuration
 	Network *Network `json:"network,omitempty"`
+        // GPU
+        GPU *GPU `json:"gpu,omitempty"`
 }
 
 // Device represents the mknod information for a Linux special device file
-- 
2.7.4

